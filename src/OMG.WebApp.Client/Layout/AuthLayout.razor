@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" @bind-IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudMainContent>
        <div style="min-height: 100vh; display: flex; flex-direction: column; justify-content: center; align-items: center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
            <div style="text-align: center; margin-bottom: 2rem;">
                <MudText Typo="Typo.h2" Style="color: white; font-weight: bold; margin-bottom: 0.5rem;">
                    OMG que Cheiro
                </MudText>
                <MudText Typo="Typo.h6" Style="color: rgba(255,255,255,0.9);">
                    Sistema de GestÃ£o de Pedidos
                </MudText>
            </div>
            
            <div style="width: 100%; max-width: 500px; padding: 0 1rem;">
                @Body
            </div>
            
            <div style="position: fixed; bottom: 1rem; right: 1rem;">
                <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Surface" OnClick="@DarkModeToggle" Size="Size.Large" />
            </div>
        </div>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    Ocorreu um erro, tente recarregar.
    <a href="" class="reload">Recarregar</a>
    <a class="dismiss">ðŸ—™</a>
</div>

@code {
    private bool _isDarkMode = false;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}
