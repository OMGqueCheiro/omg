@page "/change-password"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using MudBlazor
@using System.ComponentModel.DataAnnotations
@using OMG.Core.Request
@using OMG.Core.Handler
@attribute [Authorize]
@rendermode InteractiveWebAssembly
@inject IAuthHandler AuthHandler
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>Alterar Senha - OMG que Cheiro</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-8">
    <MudPaper Elevation="3" Class="pa-8">
        <MudText Typo="Typo.h4" Align="Align.Center" GutterBottom="true">
            Alterar Senha
        </MudText>
        <MudText Typo="Typo.body1" Align="Align.Center" Class="mb-6">
            Digite sua senha atual e a nova senha
        </MudText>

        <AuthorizeView>
            <Authorized>
                <MudForm @ref="form" @bind-IsValid="@success">
                    <MudTextField @bind-Value="currentPassword" 
                                  Label="Senha Atual" 
                                  Variant="Variant.Outlined" 
                                  InputType="InputType.Password" 
                                  Required="true" 
                                  RequiredError="Senha atual é obrigatória" />

                    <MudTextField @bind-Value="newPassword" 
                                  Label="Nova Senha" 
                                  Variant="Variant.Outlined" 
                                  InputType="InputType.Password" 
                                  Required="true" 
                                  RequiredError="Nova senha é obrigatória"
                                  Class="mt-4" />

                    <MudTextField @bind-Value="confirmNewPassword" 
                                  Label="Confirmar Nova Senha" 
                                  Variant="Variant.Outlined" 
                                  InputType="InputType.Password" 
                                  Required="true" 
                                  RequiredError="Confirmação de senha é obrigatória"
                                  Class="mt-4" />

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <MudAlert Severity="Severity.Error" Class="mt-4">@errorMessage</MudAlert>
                    }

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <MudAlert Severity="Severity.Success" Class="mt-4">@successMessage</MudAlert>
                    }

                    <MudButton Variant="Variant.Filled" 
                               Color="Color.Primary" 
                               FullWidth="true" 
                               Class="mt-6"
                               OnClick="HandleChangePassword"
                               Disabled="@isLoading">
                        @if (isLoading)
                        {
                            <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                            <MudText Class="ml-2">Alterando...</MudText>
                        }
                        else
                        {
                            <text>Alterar Senha</text>
                        }
                    </MudButton>

                    <MudButton Variant="Variant.Text" 
                               Color="Color.Secondary" 
                               FullWidth="true"
                               Class="mt-2"
                               OnClick="@(() => Navigation.NavigateTo("/"))">
                        Voltar
                    </MudButton>
                </MudForm>
            </Authorized>
            <NotAuthorized>
                <MudAlert Severity="Severity.Warning">
                    Você precisa estar logado para alterar a senha.
                </MudAlert>
                <MudButton Variant="Variant.Filled" 
                           Color="Color.Primary" 
                           FullWidth="true"
                           Class="mt-4"
                           OnClick="@(() => Navigation.NavigateTo("/login"))">
                    Fazer Login
                </MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudPaper>
</MudContainer>

@code {
    private MudForm? form;
    private bool success;
    private string currentPassword = string.Empty;
    private string newPassword = string.Empty;
    private string confirmNewPassword = string.Empty;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private bool isLoading = false;
    private string userEmail = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        
        if (user.Identity?.IsAuthenticated == true)
        {
            userEmail = user.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ?? string.Empty;
        }
    }

    private async Task HandleChangePassword()
    {
        await form!.Validate();

        if (!success)
            return;

        if (newPassword != confirmNewPassword)
        {
            errorMessage = "As novas senhas não coincidem";
            return;
        }

        isLoading = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;

        try
        {
            var request = new ChangePasswordRequest(userEmail, currentPassword, newPassword, confirmNewPassword);
            var response = await AuthHandler.ChangePasswordAsync(request);

            if (response.Success)
            {
                successMessage = response.Message ?? "Senha alterada com sucesso!";
                
                // Limpar campos
                currentPassword = string.Empty;
                newPassword = string.Empty;
                confirmNewPassword = string.Empty;
                
                // Aguardar 2 segundos e redirecionar
                await Task.Delay(2000);
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = response.Message ?? "Erro ao alterar senha";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao alterar senha: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
