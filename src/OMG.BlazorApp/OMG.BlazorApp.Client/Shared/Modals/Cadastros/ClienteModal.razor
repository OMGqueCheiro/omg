@using MudBlazor

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            @(IsEdit ? "Editar Cliente" : "Novo Cliente")
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="@_isValid">
            <MudTextField @bind-Value="Entity.Nome"
                          Label="Nome"
                          Required="true"
                          RequiredError="Nome é obrigatório"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense" />
            
            <MudTextField @bind-Value="Entity.Telefone"
                          Label="Telefone"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense"
                          Class="mt-3" />
            
            <MudTextField @bind-Value="Entity.Endereco"
                          Label="Endereço"
                          Lines="3"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense"
                          Class="mt-3" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancelar</MudButton>
        <MudButton Color="Color.Primary" 
                   Variant="Variant.Filled" 
                   OnClick="Submit"
                   Disabled="@(!_isValid)">
            Salvar
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter, EditorRequired]
    public required Cliente Entity { get; set; }

    [Parameter]
    public bool IsEdit { get; set; } = false;

    private MudForm? _form;
    private bool _isValid = false;

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Submit()
    {
        if (_form != null)
        {
            await _form.Validate();
            if (_form.IsValid)
            {
                MudDialog.Close(DialogResult.Ok(Entity));
            }
        }
    }
}
