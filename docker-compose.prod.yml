version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: omg-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=OMGdb
      - POSTGRES_USER=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - omg-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migration-worker:
    image: ghcr.io/omgquecheiro/omg-migrationworker:latest
    container_name: omg-migration-worker
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__database=Host=postgres;Port=5432;Database=OMGdb;Username=postgres;Password=${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - omg-network
    restart: on-failure

  api:
    image: ghcr.io/omgquecheiro/omg-api:latest
    container_name: omg-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__database=Host=postgres;Port=5432;Database=OMGdb;Username=postgres;Password=${POSTGRES_PASSWORD}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=OMG.Api
      - JwtSettings__Audience=OMG.WebApp
    depends_on:
      postgres:
        condition: service_healthy
      migration-worker:
        condition: service_completed_successfully
    networks:
      - omg-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  blazorapp:
    image: ghcr.io/omgquecheiro/omg-blazorapp:latest
    container_name: omg-blazorapp
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - services__omg-api__http__0=http://api:8080
    depends_on:
      api:
        condition: service_healthy
    networks:
      - omg-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  caddy:
    image: caddy:2-alpine
    container_name: omg-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      - blazorapp
    networks:
      - omg-network
    restart: unless-stopped

volumes:
  postgres-data:
    name: omg-postgres-data
  caddy-data:
    name: omg-caddy-data
  caddy-config:
    name: omg-caddy-config

networks:
  omg-network:
    name: omg-network
    driver: bridge
